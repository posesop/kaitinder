openapi: 3.0.0
info:
  version: 1.0.0
  title: Kairos KaiTinder
servers:
- url: http://localhost:{port}
  description: Local server
  variables:
    port:
      default: '3000'
paths:
  /candidates:
    get:
      description: Service to retrieve the candidates list
      summary: Get candidates
      operationId: GetCandidates
      tags:
      - candidates
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          minimum: 1
          default: 1
        required: false
        description: The page number to return.
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
        required: false
        description: The maximun number of items to return per page.
      responses:
        200:
          description: List of candidates
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Candidate'
              example:
                data:
                  items:
                  - _id: 12313
                    name: Peter
                    photo: https://s3.amazonaws.com/uifaces/faces/twitter/jordyvdboom/128.jpg
                    zipCode: 28009
                    city: Madrid
                  size: 1
                  offset: 0
                  limit: 9
                  total: 20
        400:
          $ref: '#/components/responses/400'
components:
  schemas:
    Candidate:
        type: object
        properties:
          _id:
            type: string
          photo:
            type: string
          name:
            type: string
          city:
            type: string
          zipCode:
            type: string
  responses:
    200:
      description: Ok
    201:
      description: Created
    204:
      description: No content
    404:
      description: Not found
      content:
        application/json:
          example:
            status: 404
            message: entity not found
            data: {}
    400:
      description: Bad request (validation error)
      content:
        application/json:
          examples:
            paramError:
              value:
                status: 400
                message: The server cannot or will not process the request due to an apparent client error
                data:
                  errors:
                  - field: propname
                    type: object.allowUnknown
                    message: '"propname" is not allowed'
